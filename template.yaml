AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  overwex-api

  Sample SAM Template for overwex-api
  
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 180
    Handler: app.handler
    Runtime: nodejs12.x

Parameters:
  CognitoSecretClientParam:
    Type: String
    Description: Secret del client de cognito

Resources:
  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      EmailVerificationSubject: DEVELOPER
      EmailConfiguration:
        EmailSendingAccount: DEVELOPER
        From: Overwex Team <alejandrom9712@gmail.com>
        SourceArn: arn:aws:ses:us-east-1:875649895777:identity/alejandrom9712@gmail.com
      AccountRecoverySetting:
        RecoveryMechanisms:
          - Name: verified_email
            Priority: 1
      AutoVerifiedAttributes:
        - email
      Schema:
        - Name: name
          AttributeDataType: String
          Mutable: true
          Required: true
        - Name: email
          AttributeDataType: String
          Mutable: false
          Required: true
      UserPoolName: overwex-pool
      VerificationMessageTemplate: 
        DefaultEmailOption: CONFIRM_WITH_LINK
      Policies:
        PasswordPolicy:
          MinimumLength: 10
          RequireLowercase: true
          RequireUppercase: true
          RequireNumbers: true 

  CognitoPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ExplicitAuthFlows:
        - ALLOW_ADMIN_USER_PASSWORD_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
      UserPoolId: !Ref CognitoUserPool
      ClientName: overwexwebsite
      GenerateSecret: true
      AllowedOAuthFlows:
        - code
        - implicit
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthScopes:
        - email
        - openid
        - aws.cognito.signin.user.admin
        - profile
      CallbackURLs:
        - https://overwex.axe-rodriguez.com
      LogoutURLs:
        - https://overwex.axe-rodriguez.com
      SupportedIdentityProviders:
        - COGNITO
  
  CognitoDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      Domain: overwex
      UserPoolId: !Ref CognitoUserPool

  OverwexApi:
    Type: AWS::Serverless::Api
    Properties:
      Cors:
        AllowHeaders: "'*'"
        AllowOrigin: "'*'"
      Domain:
        Route53:
          HostedZoneId: Z1OS8RJVFWP6SE
        CertificateArn: arn:aws:acm:us-east-1:875649895777:certificate/92a043d8-7201-453f-82c1-5baa0c12461c
        DomainName: overwexapi.axel-rodriguez.com
        EndpointConfiguration: REGIONAL
      StageName: prod

  LoginFunction:
    Type: AWS::Serverless::Function
    Properties:
      Policies:
        - AmazonCognitoPowerUser
      Environment:
        Variables:
          CognitoPoolId: !Ref CognitoUserPool
          CognitoClientId: !Ref CognitoPoolClient
          CognitoSecretClient: !Ref CognitoSecretClientParam
      CodeUri: auth/login
      Events:
        Login:
          Type: Api
          Properties:
            RestApiId: !Ref OverwexApi
            Path: /api/v1/auth/login
            Method: post

  RegisterFunction:
    Type: AWS::Serverless::Function
    Properties:
      Environment:
        Variables:
          CognitoPoolId: !Ref CognitoUserPool
          CognitoClientId: !Ref CognitoPoolClient
          CognitoSecretClient: !Ref CognitoSecretClientParam
      CodeUri: auth/register
      Events:
        Register:
          Type: Api
          Properties:
            RestApiId: !Ref OverwexApi
            Path: /api/v1/auth/register
            Method: post
